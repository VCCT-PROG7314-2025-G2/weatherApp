// Generated by view binder compiler. Do not edit!
package com.simbasmart.weatherapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simbasmart.weatherapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWeatherBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView ivRefresh;

  @NonNull
  public final ImageView ivSearch;

  @NonNull
  public final ImageView ivWeatherMain;

  @NonNull
  public final RecyclerView rvDailyForecast;

  @NonNull
  public final RecyclerView rvHourlyForecast;

  @NonNull
  public final TextView tvFeelsLike;

  @NonNull
  public final TextView tvHumidity;

  @NonNull
  public final TextView tvLastUpdated;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvPressure;

  @NonNull
  public final TextView tvTemperatureMain;

  @NonNull
  public final TextView tvVisibility;

  @NonNull
  public final TextView tvWeatherDescription;

  @NonNull
  public final TextView tvWindSpeed;

  private FragmentWeatherBinding(@NonNull NestedScrollView rootView, @NonNull ImageView ivRefresh,
      @NonNull ImageView ivSearch, @NonNull ImageView ivWeatherMain,
      @NonNull RecyclerView rvDailyForecast, @NonNull RecyclerView rvHourlyForecast,
      @NonNull TextView tvFeelsLike, @NonNull TextView tvHumidity, @NonNull TextView tvLastUpdated,
      @NonNull TextView tvLocation, @NonNull TextView tvPressure,
      @NonNull TextView tvTemperatureMain, @NonNull TextView tvVisibility,
      @NonNull TextView tvWeatherDescription, @NonNull TextView tvWindSpeed) {
    this.rootView = rootView;
    this.ivRefresh = ivRefresh;
    this.ivSearch = ivSearch;
    this.ivWeatherMain = ivWeatherMain;
    this.rvDailyForecast = rvDailyForecast;
    this.rvHourlyForecast = rvHourlyForecast;
    this.tvFeelsLike = tvFeelsLike;
    this.tvHumidity = tvHumidity;
    this.tvLastUpdated = tvLastUpdated;
    this.tvLocation = tvLocation;
    this.tvPressure = tvPressure;
    this.tvTemperatureMain = tvTemperatureMain;
    this.tvVisibility = tvVisibility;
    this.tvWeatherDescription = tvWeatherDescription;
    this.tvWindSpeed = tvWindSpeed;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWeatherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWeatherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_weather, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWeatherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_refresh;
      ImageView ivRefresh = ViewBindings.findChildViewById(rootView, id);
      if (ivRefresh == null) {
        break missingId;
      }

      id = R.id.iv_search;
      ImageView ivSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivSearch == null) {
        break missingId;
      }

      id = R.id.iv_weather_main;
      ImageView ivWeatherMain = ViewBindings.findChildViewById(rootView, id);
      if (ivWeatherMain == null) {
        break missingId;
      }

      id = R.id.rv_daily_forecast;
      RecyclerView rvDailyForecast = ViewBindings.findChildViewById(rootView, id);
      if (rvDailyForecast == null) {
        break missingId;
      }

      id = R.id.rv_hourly_forecast;
      RecyclerView rvHourlyForecast = ViewBindings.findChildViewById(rootView, id);
      if (rvHourlyForecast == null) {
        break missingId;
      }

      id = R.id.tv_feels_like;
      TextView tvFeelsLike = ViewBindings.findChildViewById(rootView, id);
      if (tvFeelsLike == null) {
        break missingId;
      }

      id = R.id.tv_humidity;
      TextView tvHumidity = ViewBindings.findChildViewById(rootView, id);
      if (tvHumidity == null) {
        break missingId;
      }

      id = R.id.tv_last_updated;
      TextView tvLastUpdated = ViewBindings.findChildViewById(rootView, id);
      if (tvLastUpdated == null) {
        break missingId;
      }

      id = R.id.tv_location;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tv_pressure;
      TextView tvPressure = ViewBindings.findChildViewById(rootView, id);
      if (tvPressure == null) {
        break missingId;
      }

      id = R.id.tv_temperature_main;
      TextView tvTemperatureMain = ViewBindings.findChildViewById(rootView, id);
      if (tvTemperatureMain == null) {
        break missingId;
      }

      id = R.id.tv_visibility;
      TextView tvVisibility = ViewBindings.findChildViewById(rootView, id);
      if (tvVisibility == null) {
        break missingId;
      }

      id = R.id.tv_weather_description;
      TextView tvWeatherDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvWeatherDescription == null) {
        break missingId;
      }

      id = R.id.tv_wind_speed;
      TextView tvWindSpeed = ViewBindings.findChildViewById(rootView, id);
      if (tvWindSpeed == null) {
        break missingId;
      }

      return new FragmentWeatherBinding((NestedScrollView) rootView, ivRefresh, ivSearch,
          ivWeatherMain, rvDailyForecast, rvHourlyForecast, tvFeelsLike, tvHumidity, tvLastUpdated,
          tvLocation, tvPressure, tvTemperatureMain, tvVisibility, tvWeatherDescription,
          tvWindSpeed);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
